blueprint:
  name: Dimmer Switch â€“ Light Group Control (zigbee2mqtt)
  description: >
    Control a light group using the Philips Hue Dimmer Switch,
    replicating the default behavior of the Philips Hue app.
  domain: automation
  input:
    light_group:
      name: Light Group
      description: The light group whose lights will be controlled by the dimmer switch.
      selector:
        entity:
          domain: light
    dimmer_device:
      name: Dimmer Device
      description: The Philips Hue Dimmer Switch paired with MQTT.
      selector:
        device:
          integration: mqtt
          entity:
            - domain: sensor
  source_url: https://github.com/thorgeir/home-assistant-automations/blob/main/blueprints/HueDimmerAreaControllBlueprint.yaml
mode: restart
max_exceeded: silent

variables:
  device_id: !input dimmer_device
  light_group: !input light_group

trigger:
  - platform: mqtt
    topic: "zigbee2mqtt/+/action"

condition:
  - condition: template
    value_template: >
      {{ trigger.topic == 'zigbee2mqtt/' ~ device_attr(device_id, 'name') ~ '/action' }}

action:
  - variables:
      payload: "{{ trigger.payload }}"
      lights_on: "{{ states(light_group) == 'on' }}"
      lights_temps: "{{ state_attr(light_group,'color_temp') }}"

  #  - service: logbook.log
  #    data:
  #      name: Dimmer Command
  #      message: "Light temp : >{{ lights_temps }}<"

  - choose:
      # Lower color temperature when already on and above threshold
      - conditions:
          - condition: template
            value_template: >
              {{ payload == 'on_press_release'
                 and lights_on
                 and lights_temps >= 450 }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              color_temp: 250

      # Increase color temperature when already on
      - conditions:
          - condition: template
            value_template: >
              {{ payload == 'on_press_release'
                 and lights_on }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              color_temp: "{{ lights_temps + 25 }}"

      # On/Off toggle actions
      - conditions:
          - condition: template
            value_template: "{{ payload == 'on_press_release' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
      - conditions:
          - condition: template
            value_template: "{{ payload == 'off_press_release' }}"
        sequence:
          - service: light.turn_off
            target:
              entity_id: "{{ light_group }}"
      - conditions:
          - condition: template
            value_template: "{{ payload == 'toggle' }}"
        sequence:
          - service: light.toggle
            target:
              entity_id: "{{ light_group }}"

      # Brightness up
      - conditions:
          - condition: template
            value_template: >
              {{ payload == 'up_press' or payload == 'brightness_up_click' }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              brightness_step_pct: 9

      - conditions:
          - condition: template
            value_template: "{{ payload == 'up_hold' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              brightness_step_pct: 22

      # Brightness down
      - conditions:
          - condition: template
            value_template: >
              {{ payload == 'down_press' or payload == 'brightness_down_click' }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              brightness_step_pct: -9

      - conditions:
          - condition: template
            value_template: "{{ payload == 'down_hold' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              brightness_step_pct: -22

      # Off Hold (set brightness very low)
      - conditions:
          - condition: template
            value_template: >
              {{ payload == 'off_hold' or payload == 'brightness_down_hold' }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              brightness: 2

      # On Hold (set brightness very high)
      - conditions:
          - condition: template
            value_template: >
              {{ payload == 'on_hold' or payload == 'brightness_up_hold' }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ light_group }}"
            data:
              brightness: 255
