blueprint:
  name: Philips Hue Dimmer Switch (ZHA)
  description: >
    Control lights in a specified area using the Philips Hue Dimmer Switch (ZHA), 
    replicating the default behavior of the Philips Hue app.
  domain: automation
  input:
    area:
      name: Area
      description: The area whose lights will be controlled by the dimmer switch.
      selector:
        area: {}
    dimmer_device:
      name: Dimmer Device
      description: The Philips Hue Dimmer Switch paired with ZHA.
      selector:
        device:
          integration: zha

mode: restart
max_exceeded: silent
trigger:
  - platform: device
    domain: zha
    device_id: !input dimmer_device
    type: remote_button_short_press
    subtype: button_1
  - platform: device
    domain: zha
    device_id: !input dimmer_device
    type: remote_button_short_press
    subtype: button_4
  - platform: device
    domain: zha
    device_id: !input dimmer_device
    type: remote_button_short_press
    subtype: button_2
  - platform: device
    domain: zha
    device_id: !input dimmer_device
    type: remote_button_short_press
    subtype: button_3

variables:
  area: !input area

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.command == 'on' }}"
        sequence:
          - service: light.turn_on
            target:
              area_id: "{{ area }}"
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.command == 'off' }}"
        sequence:
          - service: light.turn_off
            target:
              area_id: "{{ area }}"
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.command == 'step' and trigger.event.data.args[0] == 0 }}"
        sequence:
          - service: light.turn_on
            target:
              area_id: "{{ area }}"
            data:
              brightness_step_pct: 10
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.command == 'step' and trigger.event.data.args[0] == 1 }}"
        sequence:
          - service: light.turn_on
            target:
              area_id: "{{ area }}"
            data:
              brightness_step_pct: -10